# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import cisco_grpc_dialin_pb2 as cisco__grpc__dialin__pb2


class gRPCConfigOperStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.GetConfig = channel.unary_stream(
        '/IOSXRExtensibleManagabilityService.gRPCConfigOper/GetConfig',
        request_serializer=cisco__grpc__dialin__pb2.ConfigGetArgs.SerializeToString,
        response_deserializer=cisco__grpc__dialin__pb2.ConfigGetReply.FromString,
        )
    self.MergeConfig = channel.unary_unary(
        '/IOSXRExtensibleManagabilityService.gRPCConfigOper/MergeConfig',
        request_serializer=cisco__grpc__dialin__pb2.ConfigArgs.SerializeToString,
        response_deserializer=cisco__grpc__dialin__pb2.ConfigReply.FromString,
        )
    self.DeleteConfig = channel.unary_unary(
        '/IOSXRExtensibleManagabilityService.gRPCConfigOper/DeleteConfig',
        request_serializer=cisco__grpc__dialin__pb2.ConfigArgs.SerializeToString,
        response_deserializer=cisco__grpc__dialin__pb2.ConfigReply.FromString,
        )
    self.ReplaceConfig = channel.unary_unary(
        '/IOSXRExtensibleManagabilityService.gRPCConfigOper/ReplaceConfig',
        request_serializer=cisco__grpc__dialin__pb2.ConfigArgs.SerializeToString,
        response_deserializer=cisco__grpc__dialin__pb2.ConfigReply.FromString,
        )
    self.CliConfig = channel.unary_unary(
        '/IOSXRExtensibleManagabilityService.gRPCConfigOper/CliConfig',
        request_serializer=cisco__grpc__dialin__pb2.CliConfigArgs.SerializeToString,
        response_deserializer=cisco__grpc__dialin__pb2.CliConfigReply.FromString,
        )
    self.CommitReplace = channel.unary_unary(
        '/IOSXRExtensibleManagabilityService.gRPCConfigOper/CommitReplace',
        request_serializer=cisco__grpc__dialin__pb2.CommitReplaceArgs.SerializeToString,
        response_deserializer=cisco__grpc__dialin__pb2.CommitReplaceReply.FromString,
        )
    self.CommitConfig = channel.unary_unary(
        '/IOSXRExtensibleManagabilityService.gRPCConfigOper/CommitConfig',
        request_serializer=cisco__grpc__dialin__pb2.CommitArgs.SerializeToString,
        response_deserializer=cisco__grpc__dialin__pb2.CommitReply.FromString,
        )
    self.ConfigDiscardChanges = channel.unary_unary(
        '/IOSXRExtensibleManagabilityService.gRPCConfigOper/ConfigDiscardChanges',
        request_serializer=cisco__grpc__dialin__pb2.DiscardChangesArgs.SerializeToString,
        response_deserializer=cisco__grpc__dialin__pb2.DiscardChangesReply.FromString,
        )
    self.GetOper = channel.unary_stream(
        '/IOSXRExtensibleManagabilityService.gRPCConfigOper/GetOper',
        request_serializer=cisco__grpc__dialin__pb2.GetOperArgs.SerializeToString,
        response_deserializer=cisco__grpc__dialin__pb2.GetOperReply.FromString,
        )
    self.CreateSubs = channel.unary_stream(
        '/IOSXRExtensibleManagabilityService.gRPCConfigOper/CreateSubs',
        request_serializer=cisco__grpc__dialin__pb2.CreateSubsArgs.SerializeToString,
        response_deserializer=cisco__grpc__dialin__pb2.CreateSubsReply.FromString,
        )


class gRPCConfigOperServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def GetConfig(self, request, context):
    """Configuration related commands

    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def MergeConfig(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def DeleteConfig(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def ReplaceConfig(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def CliConfig(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def CommitReplace(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def CommitConfig(self, request, context):
    """Do we need implicit or explicit commit

    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def ConfigDiscardChanges(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetOper(self, request, context):
    """Get only returns oper data

    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def CreateSubs(self, request, context):
    """Get Telemetry Data
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_gRPCConfigOperServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'GetConfig': grpc.unary_stream_rpc_method_handler(
          servicer.GetConfig,
          request_deserializer=cisco__grpc__dialin__pb2.ConfigGetArgs.FromString,
          response_serializer=cisco__grpc__dialin__pb2.ConfigGetReply.SerializeToString,
      ),
      'MergeConfig': grpc.unary_unary_rpc_method_handler(
          servicer.MergeConfig,
          request_deserializer=cisco__grpc__dialin__pb2.ConfigArgs.FromString,
          response_serializer=cisco__grpc__dialin__pb2.ConfigReply.SerializeToString,
      ),
      'DeleteConfig': grpc.unary_unary_rpc_method_handler(
          servicer.DeleteConfig,
          request_deserializer=cisco__grpc__dialin__pb2.ConfigArgs.FromString,
          response_serializer=cisco__grpc__dialin__pb2.ConfigReply.SerializeToString,
      ),
      'ReplaceConfig': grpc.unary_unary_rpc_method_handler(
          servicer.ReplaceConfig,
          request_deserializer=cisco__grpc__dialin__pb2.ConfigArgs.FromString,
          response_serializer=cisco__grpc__dialin__pb2.ConfigReply.SerializeToString,
      ),
      'CliConfig': grpc.unary_unary_rpc_method_handler(
          servicer.CliConfig,
          request_deserializer=cisco__grpc__dialin__pb2.CliConfigArgs.FromString,
          response_serializer=cisco__grpc__dialin__pb2.CliConfigReply.SerializeToString,
      ),
      'CommitReplace': grpc.unary_unary_rpc_method_handler(
          servicer.CommitReplace,
          request_deserializer=cisco__grpc__dialin__pb2.CommitReplaceArgs.FromString,
          response_serializer=cisco__grpc__dialin__pb2.CommitReplaceReply.SerializeToString,
      ),
      'CommitConfig': grpc.unary_unary_rpc_method_handler(
          servicer.CommitConfig,
          request_deserializer=cisco__grpc__dialin__pb2.CommitArgs.FromString,
          response_serializer=cisco__grpc__dialin__pb2.CommitReply.SerializeToString,
      ),
      'ConfigDiscardChanges': grpc.unary_unary_rpc_method_handler(
          servicer.ConfigDiscardChanges,
          request_deserializer=cisco__grpc__dialin__pb2.DiscardChangesArgs.FromString,
          response_serializer=cisco__grpc__dialin__pb2.DiscardChangesReply.SerializeToString,
      ),
      'GetOper': grpc.unary_stream_rpc_method_handler(
          servicer.GetOper,
          request_deserializer=cisco__grpc__dialin__pb2.GetOperArgs.FromString,
          response_serializer=cisco__grpc__dialin__pb2.GetOperReply.SerializeToString,
      ),
      'CreateSubs': grpc.unary_stream_rpc_method_handler(
          servicer.CreateSubs,
          request_deserializer=cisco__grpc__dialin__pb2.CreateSubsArgs.FromString,
          response_serializer=cisco__grpc__dialin__pb2.CreateSubsReply.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'IOSXRExtensibleManagabilityService.gRPCConfigOper', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))


class gRPCExecStub(object):
  """
  Should we seperate Exec from Config/Oper?


  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.ShowCmdTextOutput = channel.unary_stream(
        '/IOSXRExtensibleManagabilityService.gRPCExec/ShowCmdTextOutput',
        request_serializer=cisco__grpc__dialin__pb2.ShowCmdArgs.SerializeToString,
        response_deserializer=cisco__grpc__dialin__pb2.ShowCmdTextReply.FromString,
        )
    self.ShowCmdJSONOutput = channel.unary_stream(
        '/IOSXRExtensibleManagabilityService.gRPCExec/ShowCmdJSONOutput',
        request_serializer=cisco__grpc__dialin__pb2.ShowCmdArgs.SerializeToString,
        response_deserializer=cisco__grpc__dialin__pb2.ShowCmdJSONReply.FromString,
        )


class gRPCExecServicer(object):
  """
  Should we seperate Exec from Config/Oper?


  """

  def ShowCmdTextOutput(self, request, context):
    """Exec commands
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def ShowCmdJSONOutput(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_gRPCExecServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'ShowCmdTextOutput': grpc.unary_stream_rpc_method_handler(
          servicer.ShowCmdTextOutput,
          request_deserializer=cisco__grpc__dialin__pb2.ShowCmdArgs.FromString,
          response_serializer=cisco__grpc__dialin__pb2.ShowCmdTextReply.SerializeToString,
      ),
      'ShowCmdJSONOutput': grpc.unary_stream_rpc_method_handler(
          servicer.ShowCmdJSONOutput,
          request_deserializer=cisco__grpc__dialin__pb2.ShowCmdArgs.FromString,
          response_serializer=cisco__grpc__dialin__pb2.ShowCmdJSONReply.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'IOSXRExtensibleManagabilityService.gRPCExec', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
